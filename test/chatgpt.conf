# Nginx-style configuration

# ================================================
# Global settings
# ================================================

# Number of worker processes (usually set to number of CPU cores)
worker_processes  auto;

# Error log (change path as needed)
error_log  /var/log/webserver/error.log warn;
pid        /var/run/webserver.pid;

events {
    # Max simultaneous connections
    worker_connections  1024;
}

# ================================================
# HTTP configuration
# ================================================

http {
    # MIME types
    include       mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log  /var/log/webserver/access.log;

    # Keep connections alive
    keepalive_timeout  65;

    # Gzip compression (optional)
    gzip on;

    # ============================================
    # Server block (Virtual Host)
    # ============================================
    server {
        # Listen on port 80 (HTTP)
        listen       80;

        # Server name (domain or IP)
        server_name  example.com www.example.com;

        # Document root
        root   /var/www/example.com/html;
        index  index.html index.htm index.php;

        # Logging for this server
        access_log  /var/log/webserver/example.access.log;
        error_log   /var/log/webserver/example.error.log;

        # ========================================
        # Location blocks (routes)
        # ========================================

        # Default location
        location / {
            try_files $uri $uri/ =404;
        }

        # Static files
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            access_log off;
        }

        # PHP (via FastCGI)
        location ~ \.php$ {
            include        fastcgi_params;
            fastcgi_pass   unix:/run/php/php7.4-fpm.sock; # adjust version
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # Deny access to hidden files (.htaccess, etc.)
        location ~ /\. {
            deny all;
        }
    }

    # ============================================
    # (Optional) Redirect HTTP -> HTTPS
    # ============================================
    server {
        listen 80;
        server_name secure.example.com;
        return 301 https://$host$request_uri;
    }

    # ============================================
    # (Optional) HTTPS server
    # ============================================
    server {
        listen 443 ssl;
        server_name  example.com www.example.com;

        ssl_certificate      /etc/ssl/certs/example.com.crt;
        ssl_certificate_key  /etc/ssl/private/example.com.key;

        root   /var/www/example.com/html;
        index  index.html index.htm index.php;
    }
}



# ============================
# Key Points (Extra comments)
# ============================

#Global block: worker processes, logs.
#http block: general web-related settings.
#server block: a "virtual host" (domain-specific configuration).
#location blocks: route-specific rules (static files, PHP, API, etc.).
#SSL section (optional): add HTTPS support.

#✅ This template is generic and should work as a starting point on most Linux systems running Nginx. You’d place it in /etc/nginx/sites-available/your-site.conf and symlink it to /etc/nginx/sites-enabled/.

